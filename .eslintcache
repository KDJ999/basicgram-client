[{"/Users/kdj/Desktop/WDOctober2020/Red Badge/final/client/src/index.tsx":"1","/Users/kdj/Desktop/WDOctober2020/Red Badge/final/client/src/reportWebVitals.ts":"2","/Users/kdj/Desktop/WDOctober2020/Red Badge/final/client/src/App.tsx":"3","/Users/kdj/Desktop/WDOctober2020/Red Badge/final/client/src/Components/Auth/Signup.tsx":"4","/Users/kdj/Desktop/WDOctober2020/Red Badge/final/client/src/Components/Auth/Login.tsx":"5","/Users/kdj/Desktop/WDOctober2020/Red Badge/final/client/src/Components/Post/PostCreate.tsx":"6","/Users/kdj/Desktop/WDOctober2020/Red Badge/final/client/src/Components/Post/PostEdit.tsx":"7","/Users/kdj/Desktop/WDOctober2020/Red Badge/final/client/src/Components/Comment/CommentCreate.tsx":"8","/Users/kdj/Desktop/WDOctober2020/Red Badge/final/client/src/Components/Post/PostIndex.tsx":"9","/Users/kdj/Desktop/WDOctober2020/Red Badge/final/client/src/Components/Comment/CommentIndex.tsx":"10","/Users/kdj/Desktop/WDOctober2020/Red Badge/final/client/src/Components/Comment/CommentEdit.tsx":"11","/Users/kdj/Desktop/WDOctober2020/Red Badge/final/client/src/Components/Post/PostTable.tsx":"12","/Users/kdj/Desktop/WDOctober2020/Red Badge/final/client/src/Components/Comment/CommentTable.tsx":"13","/Users/kdj/Desktop/WDOctober2020/Red Badge/final/client/src/helpers/environment.js":"14"},{"size":529,"mtime":1610641440826,"results":"15","hashOfConfig":"16"},{"size":425,"mtime":1609862171976,"results":"17","hashOfConfig":"16"},{"size":1862,"mtime":1610549757522,"results":"18","hashOfConfig":"16"},{"size":2264,"mtime":1610713735532,"results":"19","hashOfConfig":"16"},{"size":1531,"mtime":1610509250828,"results":"20","hashOfConfig":"16"},{"size":2729,"mtime":1610719542613,"results":"21","hashOfConfig":"16"},{"size":1550,"mtime":1610713740704,"results":"22","hashOfConfig":"16"},{"size":2690,"mtime":1610719324657,"results":"23","hashOfConfig":"16"},{"size":4168,"mtime":1610713740704,"results":"24","hashOfConfig":"16"},{"size":4119,"mtime":1610719331056,"results":"25","hashOfConfig":"16"},{"size":2133,"mtime":1610666134373,"results":"26","hashOfConfig":"16"},{"size":7708,"mtime":1610718478857,"results":"27","hashOfConfig":"16"},{"size":2201,"mtime":1610643257476,"results":"28","hashOfConfig":"16"},{"size":293,"mtime":1610508933871,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"11e2fof",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"/Users/kdj/Desktop/WDOctober2020/Red Badge/final/client/src/index.tsx",[],["63","64"],"/Users/kdj/Desktop/WDOctober2020/Red Badge/final/client/src/reportWebVitals.ts",[],"/Users/kdj/Desktop/WDOctober2020/Red Badge/final/client/src/App.tsx",["65"],"import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Signup from \"./Components/Auth/Signup\";\nimport Login from \"./Components/Auth/Login\";\nimport PostIndex from \"./Components/Post/PostIndex\";\nimport CommentIndex from \"./Components/Comment/CommentIndex\";\n\ntype State = {\n  sessionToken: string;\n};\n\nexport default class App extends React.Component<{}, State> {\n  constructor(props: State) {\n    super(props);\n    this.state = {\n      sessionToken: \"\",\n    };\n  }\n  componentDidMount() {\n    if (localStorage.getItem(\"token\")) {\n      this.setState({\n        sessionToken: localStorage.getItem(\"token\") as string,\n      });\n    }\n  }\n  updateToken = (newToken: string) => {\n    localStorage.setItem(\"token\", newToken);\n    this.setState({\n      sessionToken: newToken,\n    });\n  };\n\n  clearToken() {\n    localStorage.clear();\n    this.setState({\n      sessionToken: \"\",\n    });\n    sessionStorage.clear();\n  }\n\n  render() {\n    return (\n      <Router>\n        <div>\n          <h1> BasicGram</h1>\n          <ul>\n            {/* <li>\n              <Link to=\"/BasicGram\">BasicGram</Link>\n            </li> */}\n            <li>\n              <Link to=\"/\">Signup</Link>\n            </li>\n            <li>\n              <Link to=\"/login\">Login</Link>\n            </li>\n            <li>\n              <Link to=\"/postindex\">PostIndex</Link>\n            </li>\n          </ul>\n        </div>\n        <hr />\n        <Switch>\n          <Route exact path=\"/\">\n            <Signup updateToken={this.updateToken} />\n          </Route>\n          <Route exact path=\"/login\">\n            <Login updateToken={this.updateToken} />\n          </Route>\n          <Route exact path=\"/postindex\">\n            <PostIndex sessionToken={this.state.sessionToken} />\n          </Route>\n        </Switch>\n      </Router>\n    );\n  }\n}\n","/Users/kdj/Desktop/WDOctober2020/Red Badge/final/client/src/Components/Auth/Signup.tsx",[],"/Users/kdj/Desktop/WDOctober2020/Red Badge/final/client/src/Components/Auth/Login.tsx",["66"],"import React, { ChangeEvent, FormEvent } from \"react\";\nimport APIURL from \"../../helpers/environment\";\n\ntype AcceptedProps = {\n  updateToken: (newToken: string) => void;\n};\n\ntype UserState = {\n  email: string;\n  password: string;\n};\n\nexport default class Login extends React.Component<AcceptedProps, UserState> {\n  constructor(props: AcceptedProps) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n    };\n  }\n\n  handleSubmit = (event: FormEvent) => {\n    event.preventDefault();\n    let url = `${APIURL}/user/login`;\n\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        //Userstate: this.state\n        email: this.state.email,\n        password: this.state.password,\n      }),\n      headers: new Headers({\n        \"Content-Type\": \"application/json\",\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data);\n        this.props.updateToken(data.token);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Login</h1>\n        <form onSubmit={this.handleSubmit}>\n          <input\n            placeholder=\"email\"\n            value={this.state.email}\n            onChange={(e) => this.setState({ email: e.target.value })}\n          />\n          <input\n            placeholder=\"password\"\n            value={this.state.password}\n            onChange={(e) => this.setState({ password: e.target.value })}\n          />\n          <button>Submit</button>\n        </form>\n      </div>\n    );\n  }\n}\n","/Users/kdj/Desktop/WDOctober2020/Red Badge/final/client/src/Components/Post/PostCreate.tsx",["67","68","69"],"/Users/kdj/Desktop/WDOctober2020/Red Badge/final/client/src/Components/Post/PostEdit.tsx",[],"/Users/kdj/Desktop/WDOctober2020/Red Badge/final/client/src/Components/Comment/CommentCreate.tsx",["70","71","72"],"/Users/kdj/Desktop/WDOctober2020/Red Badge/final/client/src/Components/Post/PostIndex.tsx",["73","74","75"],"/Users/kdj/Desktop/WDOctober2020/Red Badge/final/client/src/Components/Comment/CommentIndex.tsx",["76","77"],"/Users/kdj/Desktop/WDOctober2020/Red Badge/final/client/src/Components/Comment/CommentEdit.tsx",[],"/Users/kdj/Desktop/WDOctober2020/Red Badge/final/client/src/Components/Post/PostTable.tsx",["78","79","80"],"/Users/kdj/Desktop/WDOctober2020/Red Badge/final/client/src/Components/Comment/CommentTable.tsx",["81","82","83","84","85"],"import React, { FormEvent } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport APIURL from \"../../helpers/environment\";\n\ntype AcceptedProps = {\n  sessionToken: string;\n  Comments: any;\n  editcommentToUpdateComments: (comment: any) => void;\n  updateOn: () => void;\n  fetchComments: () => void;\n  id: any;\n  posts: any;\n};\n\ntype DeleteState = {\n  Comments: [];\n  newData: [];\n  updateActive: Boolean;\n  commentToUpdate: any;\n};\nexport default class CommentDelete extends React.Component<\n  AcceptedProps,\n  DeleteState\n> {\n  constructor(props: AcceptedProps) {\n    super(props);\n    this.state = {\n      Comments: [],\n      newData: [],\n      updateActive: false,\n      commentToUpdate: {},\n      // likes: 0,\n    };\n  }\n\n  DeleteComment = (comments: any) => {\n    fetch(`${APIURL}/comment/delete/`, {\n      method: \"DELETE\",\n      headers: new Headers({\n        \"Content-Type\": \"application/json\",\n        Authorization: this.props.sessionToken,\n      }),\n    }).then(() => this.props.fetchComments());\n  };\n  fetchComments = () => {\n    //get comments by specific post id\n    console.log(this.props.id);\n\n    fetch(`${APIURL}/comment/getallcomments/`, {\n      method: \"GET\",\n      headers: new Headers({\n        \"Content-Type\": \"application/json\",\n        Authorization: `${localStorage.getItem(\"token\")}`,\n      }),\n    })\n      .then((res) => res.json())\n      .then((commentData) => {\n        this.setState({\n          Comments: commentData,\n        });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  itemMapper = () => {\n    return this.props.posts.map((item: any, index: any) => {\n      console.log(\"MAP DATA\", item);\n      item.comments.map((itemTwo: any) => {\n        console.log(itemTwo);\n        if (item.id == itemTwo.postId) {\n          console.log(\"OK\");\n          this.setState(\n            {\n              newData: itemTwo,\n            },\n            () => console.log(\"NEWDATA\", this.state.newData)\n          );\n        } else {\n          console.log(\"NOPE\");\n        }\n      });\n    });\n  };\n\n  componentDidMount() {\n    // this.itemMapper();\n    this.fetchComments();\n  }\n\n  render() {\n    return <>{/* <div>{this.PostMapper()}</div> */}</>;\n  }\n}\n","/Users/kdj/Desktop/WDOctober2020/Red Badge/final/client/src/helpers/environment.js",[],["86","87"],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":6,"column":8,"nodeType":"94","messageId":"95","endLine":6,"endColumn":20},{"ruleId":"92","severity":1,"message":"96","line":1,"column":17,"nodeType":"94","messageId":"95","endLine":1,"endColumn":28},{"ruleId":"92","severity":1,"message":"97","line":1,"column":10,"nodeType":"94","messageId":"95","endLine":1,"endColumn":16},{"ruleId":"92","severity":1,"message":"98","line":2,"column":10,"nodeType":"94","messageId":"95","endLine":2,"endColumn":17},{"ruleId":"92","severity":1,"message":"99","line":3,"column":17,"nodeType":"94","messageId":"95","endLine":3,"endColumn":26},{"ruleId":"92","severity":1,"message":"97","line":2,"column":10,"nodeType":"94","messageId":"95","endLine":2,"endColumn":16},{"ruleId":"92","severity":1,"message":"98","line":3,"column":10,"nodeType":"94","messageId":"95","endLine":3,"endColumn":17},{"ruleId":"92","severity":1,"message":"100","line":4,"column":8,"nodeType":"94","messageId":"95","endLine":4,"endColumn":17},{"ruleId":"92","severity":1,"message":"101","line":2,"column":10,"nodeType":"94","messageId":"95","endLine":2,"endColumn":37},{"ruleId":"92","severity":1,"message":"102","line":4,"column":8,"nodeType":"94","messageId":"95","endLine":4,"endColumn":16},{"ruleId":"92","severity":1,"message":"103","line":6,"column":8,"nodeType":"94","messageId":"95","endLine":6,"endColumn":19},{"ruleId":"92","severity":1,"message":"104","line":3,"column":8,"nodeType":"94","messageId":"95","endLine":3,"endColumn":19},{"ruleId":"92","severity":1,"message":"105","line":6,"column":10,"nodeType":"94","messageId":"95","endLine":6,"endColumn":16},{"ruleId":"92","severity":1,"message":"106","line":1,"column":17,"nodeType":"94","messageId":"95","endLine":1,"endColumn":34},{"ruleId":"92","severity":1,"message":"99","line":1,"column":36,"nodeType":"94","messageId":"95","endLine":1,"endColumn":45},{"ruleId":"92","severity":1,"message":"107","line":8,"column":8,"nodeType":"94","messageId":"95","endLine":8,"endColumn":17},{"ruleId":"92","severity":1,"message":"99","line":1,"column":17,"nodeType":"94","messageId":"95","endLine":1,"endColumn":26},{"ruleId":"92","severity":1,"message":"108","line":2,"column":10,"nodeType":"94","messageId":"95","endLine":2,"endColumn":20},{"ruleId":"109","severity":1,"message":"110","line":66,"column":57,"nodeType":"111","messageId":"112","endLine":66,"endColumn":59},{"ruleId":"109","severity":1,"message":"110","line":68,"column":40,"nodeType":"111","messageId":"112","endLine":68,"endColumn":42},{"ruleId":"113","severity":1,"message":"114","line":70,"column":21,"nodeType":"115","messageId":"116","endLine":70,"endColumn":23},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"@typescript-eslint/no-unused-vars","'CommentIndex' is defined but never used.","Identifier","unusedVar","'ChangeEvent' is defined but never used.","'render' is defined but never used.","'integer' is defined but never used.","'FormEvent' is defined but never used.","'TextField' is defined but never used.","'createIndexedAccessTypeNode' is defined but never used.","'PostEdit' is defined but never used.","'CreateIndex' is defined but never used.","'CommentEdit' is defined but never used.","'Button' is defined but never used.","'DetailedHTMLProps' is defined but never used.","'PostIndex' is defined but never used.","'makeStyles' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]